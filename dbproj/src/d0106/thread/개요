멀티, 다중의 여러개의
프로세스는 실행중인 프로그램
프로세서는 cpu. 지금은 core(명령 처리기)가 여러개.
태스킹 : 일, 작업  

운영체제에서는 실행 중인 하나의 프로그램(애플리케이션)을 프로세스 process 라고 합니다.
운영체제로부터 실행에 필요한 메모리를 할당받아 명령문과 데이터를 저장하여 프로그램이 실행되고
이것이 프로세스 입니다.
멀티 태스킹(multi tasking)은 두 가지 이상의 작업을 동시에 처리하는 것이고 운영체제는 여러 개의 프로그램이
동시에 실행되도록 CPU와 메모리 자원을 프로세스 마다 적절히 할당하여 실행합니다.

멀티 프로세서가 아니어도 멀티 태스킹은 가능합니다. 예를 들면 카카오톡은 채팅을 하면서 용량이 큰 동영상을 전송할 수 있고 
브라우저는 사용자의 요청을 받아 웹사이트를 방문하면서 용량이 큰 파일을 다운로드 받을 수도 있습니다. 이와 같이
하나의 프로그램(프로세스)이 실행되는 환경에서도 멀티 태스킹은 할 수 있습니다. 이것이 멀티 스레드 (multi thread) ,
즉 하나의 애플리케이션 내에서의 멀티 태스킹입니다. thread 는 `한가닥 실` 뜻으로 하나의 작업을 실행하기 위해 이어진(연속된) 명령을 의미합니다.

멀티 프로세스는 운영체제에서 할당받은 자신의 메모리를 독립적으로 사용하여 다른 프로세스와 메모리 충돌 문제가 생기지 않지만
멀티 스레드는 동일한 프로세스이므로 메모리를 함께 사용하여 서로 영항을 끼치게 됩니다.

모든 자바 애플리케이션은 main() 메소드를 실행하면 main thread 가 시작됩니다. main thread 가 첫 명령부터 순차적으로 실행합니다.
이 때 main thread 는 필요에 따라 추가적인 작업 스레드를 만들어 동시에 실행하도록 합니다. 이 때 메인스레드가 먼저 종료되고 작업 스레드가 
계속 실행 중일 수도 있습니다.
- 동시성 concurrency : 멀티 태스킹을 위해 하나의 core 장치에서 스레드들이 번갈아 가며 실행하여 동시 처리와 같은 효과. 
                    스레드 개수가 core 개수보다 많으므로 스레드의 처리 순서를 정하는 스케줄링이 필요하며 기본적으로는 time slice 방식으로 순환
                    하지만 우선 순위를 부여하여 개발자가 제어 할수 있다.
- 병렬성 parallelism : 멀티 core를 이용하여 스레드가 각각 하나의 core 에서 병렬처리 된다.

### 스레드 생성 방법
방법1. java.lang.Thread 클래스의 객체를 생성. 이 때는 Runnable 인터페이스 구현체가 필요함.
방법2. Thread 상속 클래스를 정의.

### 스레드 동작
_스레드객체_참조변수.start()

### 스레드 이름
자바에서는 스레드의 이름을 Thread-n (n은 만들어진 스레드의 번호) 와 같이 자동으로 만들며 다른 이름을 부여할 수도 있다.
- 방법1: Thread 생성자로 스레드 이름 설정
- 방법2: _스레드객체_참조변수.setName() 메소드
실행 중인 스레드 이름을 알아내려면
- Thread.currentThread.getName() 메소드 또는 스레드객체_참조변수.getName() 메소드를 실행한다.

### Thread.sleep(ms)
- 현재 실행 중인 스레드를 지정된 시간만큼 일시 중지 시킵니다.

### 스레드의 공유 객체
멀티 스레드 프로그램에서 스레드들이 객체를 공유해서 작업해야 하는 경우가 있습니다. 스레드1이 사용하는 객체를 스레드2가 상태를 변경할
수 있기 때문에 스레드1 이 의도한 결과와 다른 실행이 결과가 될 수 있습니다.
- 스레드가 사용 중인 객체를 다른 스레드가 변경할 수 없도록 하려면 스레드 작업이 끝날 때까지 공유 객체에 접근을 못하도록 lock 을 설정합니다.
- 단 하나의 스레드만 실행할 수 있는 메모리 영역이 되는 것입니다.(critical section 임계 영역) synchronized 메소드 또는 코드 블럭으로 합니다.
- synchronized 메소드는 인스턴스 메소드와 static 메소드 모두에 사용할 수 있습니다.