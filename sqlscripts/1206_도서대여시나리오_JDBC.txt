
BookRentDto 클래스 - 대여정보 저장
	날짜 타입 : java.sql.Date 클래스
	@Getter
	@Setter
	@AllArgsConstructor
	@NoArgsConstructor

BookRentDao 클래스 - 싱클턴 
   public static BookRentDao getInstance() 메소드

[1]selectRentBook:대여 중인 도서대여정보 조회    *select SQL : ResultSet rs = null;  선언과 rs = pstmt.executeQuery(); 메소드

	public List<BookRentDto> selectRentBook() {
		List<BookRentDto> list = new ArrayList<>();
//아래 5줄은 반복되는 코드로 모든 메소드에 미리 복붙하세요.
		String sql = "";
		Connection conn = OracleUtil.getConnection();
		PreparedStatement pstmt = conn.prepareStatement(sql);
		
		pstmt.close();
		conn.close();
//여기까지 공통.
		return list;
	}

**단위테스트 __ Dao 메소드를 실행할 클래스는 메소드(기능) 중심 테스트 클래스로 만드세요. 
  BookRentTest 클래스 : selectRentBook 메소드만 테스트.	

[2]selectDelay:연체 도서 조회 . 연체중인 도서의 정보- 연체 중인 도서코드,도서명,대여날짜 조회하기
**  RentDelayTest 클래스 : selectDelay 메소드만 테스트.


selectRentByMember:회원의 도서대여 정보.  현재 대여 중인것만.
(요구사항: 1명이 1권만 대여가능. 반납해야 다른 책 대여.-> 리턴 타입 ??)
         인자는 회원번호 , 리턴은 대여정보 
**  RentByMemberTest 클래스 : selectRentByMember 메소드만 테스트.


isAvailableBook(String bcode) 메소드는 대여가능한 도서일 때 참,
isAvailableMember(int mem_idx) 메소드는 대여가능한 회원일 때 참,
isRent 메소드: 인자는 회원번호, 도서코드
	 리턴은 boolean (-> 회원번호와 도서코드가 모두 대여 가능할때 참 리턴 -> isAvaliableXXXX 이 둘다 참일때) 
	public boolean isRent(int mem_idx,String bcode) {
		boolean result = false;
		String sql = "";
		return result;
	}
**  RentAvailableTest 클래스 : isRent 메소드만 테스트.


rentBook 메소드 :대여 (insert). 리턴 void , 인자는 ??  대여날짜는 오늘날짜, exp_date는 오늘날짜+14
**  RentTest  : rentBook 메소드

returnBook:반납 (update). 리턴 void , 인자는 ??
**  ReturnTest  : returnBook 메소드

